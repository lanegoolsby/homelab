traefik:
  enabled: true
  namespace: traefik
  repoURL: "https://traefik.github.io/charts"
  chart: traefik
  version: "35.2.0" # Updated to match the version in traefik-app.yaml
  createNamespace: true

  values:

    # Basic configuration - adjust based on your needs
    ingressClass:
      enabled: true
      isDefaultClass: true

    # Ports configuration
    ports:
      web:
        port: 80
        exposedPort: 80
        expose: true
        protocol: TCP
      websecure:
        port: 443
        exposedPort: 443
        expose: true
        protocol: TCP

    # Dashboard
    dashboard:
      enabled: true

    # Explicitly create IngressRoute for the dashboard
    ingressRoute:
      dashboard:
        enabled: true
        annotations: {}
        labels: {}
        entryPoints: [ "web", "websecure" ]
        # routes:
        # - match: Host(`traefik.home.lanegoolsby.com`)
        #   kind: Rule
        #   services:
        #   - name: api@internal
        tls:
          certResolver: cloudflare
          domains:
          - main: "*.home.lanegoolsby.com"
            sans:
            - "home.lanegoolsby.com"

    # Service configuration
    service:
      type: LoadBalancer
      loadBalancerIP: "192.168.100.50" # Static IP for DNS records

    # Persistent settings
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      size: 128Mi
      path: /data
      storageClassName: ceph-rbd

    # TLS configuration to fix certificate validation error
    ssl:
      insecureSkipVerify: true

    # Add serversTransport configuration for backend certificate validation
    serversTransport:
      insecureSkipVerify: true

    # Add your custom configuration here
    additionalArguments:
    - "--api.dashboard=true"
    - "--api.insecure=true" # Enable insecure API for dashboard access
    - "--providers.kubernetesingress.ingressclass=traefik"
    - "--log.level=INFO"
    - "--serversTransport.insecureSkipVerify=true"
    - "--certificatesresolvers.cloudflare.acme.dnschallenge=true"
    - "--certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare"
    - "--certificatesresolvers.cloudflare.acme.email=lanegoolsby@yahoo.com"
    - "--certificatesresolvers.cloudflare.acme.storage=/data/acme.json"
    - "--certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
    - "--certificatesresolvers.cloudflare.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"

    # Define hosts for the dashboard
    deployment:
      additionalContainers: []

    # Environment variables for Cloudflare DNS challenge
    env:
    - name: CF_API_TOKEN
      valueFrom:
        secretKeyRef:
          name: cloudflare-api-token-secret
          key: api-token
    # Add providers block to watch specific namespaces
    providers:
      kubernetesCRD:
        enabled: true
        allowCrossNamespace: true
        allowExternalNameServices: true
      kubernetesIngress:
        enabled: true
        allowExternalNameServices: true
        - hello-world
        - argocd
        - home-assistant
